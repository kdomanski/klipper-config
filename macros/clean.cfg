[gcode_macro _G12_stroke]
gcode:
  {% set STROKES = params.STROKES %}

  {% for i in range(1, (STROKES + 1)) %}
    M117 Stroke {i}
  {% endfor %}


[gcode_macro G12]
variable_brush_start: 108
variable_brush_width: 40
variable_brush_front: -49
variable_brush_depth: 14
gcode:
  {% if not 'P' in params %}
    { action_raise_error("parameter 'P' required") }
  {% endif %}

  SAVE_GCODE_STATE NAME=G12
  LAZY_HOME
  STATUS_CLEANING

  {% set PATTERN = params.P|default(0)|int %}
  {% set STROKES = params.S|default(12)|int %}
  {% set TRIANGLES = params.T|default(3)|int %}

  {% if PATTERN == 0 %} # linear back-and-forth
    _G12_stroke STROKES={STROKES} startx={brush_start} starty={brush_front - (brush_depth/2)} endx={brush_start+brush_width} endy={brush_front - (brush_depth/2)}
  {% elif PATTERN == 1 %} # zigzag
    { action_raise_error("pattern 'P{PATTERN}' not supported ") }
  {% elif PATTERN == 2 %} # circular
    { action_raise_error("pattern 'P{PATTERN}' not supported ") }
  {% else %}
    { action_raise_error("pattern 'P{PATTERN}' not supported ") }
  {% endif %}

  RESTORE_GCODE_STATE NAME=G12

[gcode_macro clean_nozzle]
variable_brush_start: 108
variable_brush_width: 40
variable_brush_front: -49
variable_brush_depth: 14
variable_brush_top:   8
variable_clearance_z: 10
variable_prep_spd_z:  300
variable_prep_spd_xy: 8000
variable_wipe_qty:    5
variable_wipe_spd_xy: 6000
gcode:
  LAZY_HOME
  SAVE_GCODE_STATE NAME=clean_nozzle
  STATUS_CLEANING

  G90
  ## Hop by {brush_top + clearance_z} if possible. Otherwise only hop as far up as possbile.
  {% set hop_height = [(printer.toolhead.axis_maximum.z|float), (printer.toolhead.position.z + brush_top + clearance_z)]|min %}
  G1 Z{hop_height} F{prep_spd_z}

  ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
  G1 X{brush_start + brush_width} F{prep_spd_xy}
  G1 Y{brush_front + (brush_depth / 2)}
  G1 Z{brush_top + clearance_z} F{prep_spd_z * 10}

  ## Move nozzle down into brush
  G1 Z{brush_top} F{prep_spd_z}
  {% for wipes in range(1, (wipe_qty + 1)) %}
    # G2 X{brush_start + brush_width - (wipes * 2)} I-{brush_depth/3} F{wipe_spd_xy}
    G1 X{brush_start + brush_width} Y{brush_front + (brush_depth / 2) + wipes} F{wipe_spd_xy}
    G1 X{brush_start} F{wipe_spd_xy}
  {% endfor %}

  M117 Cleaned!
  G1 Z{brush_top + clearance_z} F{prep_spd_z}
  G1 Y{brush_front + (3 * brush_depth)} F{prep_spd_xy}

  RESTORE_GCODE_STATE NAME=clean_nozzle
  STATUS_READY

[gcode_macro WIPE_NOZZLE]
variable_wipe_start_x: 25
variable_wipe_start_y: -4
gcode:
  {% if not printer.extruder.can_extrude %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  {% set EXTRUDE = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}
  {% set PURGE = printer["gcode_macro MACROS_VARS"].purge_length|default(0)%}

  SAVE_GCODE_STATE NAME=WIPE_NOZZLE

  # go outside print area
  G91
  G1 Z5 F6000
  G90
  G1 X{wipe_start_x} Y{wipe_start_y} F12000
  G1 Z0.85 F12000

  _RESET_EXTRUDER
  G1 E{EXTRUDE} F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
  G1 X{wipe_start_x+20} E{PURGE} F100;
  G1 X{wipe_start_x+25} F18000;

  RESTORE_GCODE_STATE NAME=WIPE_NOZZLE
