[gcode_macro PERIODIC_BED_MESH_CALIBRATE]
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."}

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")} 
    LAZY_HOME

    STATUS_MESHING
    _BED_MESH_CALIBRATE_BASE
    SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=save_at_end VALUE=1
  {% else %}
    {action_respond_info("Loading old bed mesh.")} 
    BED_MESH_PROFILE LOAD=default
  {% endif %}

[gcode_macro _SAVE_MESH_IF_SET]
gcode:
  {% if printer["gcode_macro BED_MESH_CALIBRATE"].save_at_end == 1 %}
  {action_respond_info("Saving was requested - saving and restarting now.")}
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}

[gcode_macro RESET_BED_MESH]
gcode:
  BED_MESH_CLEAR
  SAVE_VARIABLE VARIABLE=level_age VALUE=9999

[gcode_macro BED_MESH_AND_SAVE]
gcode:
  BED_MESH_CLEAR
  LAZY_HOME
  BED_MESH_CALIBRATE
  SAVE_CONFIG
